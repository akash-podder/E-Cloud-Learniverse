# ------------------------
# Postgres Deployment Object
# ------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    # üëà Any KEY-VALUE pair is ACCEPTABLE here, convention is to use "app: fastapi-e-cloud-deployment"
    # But I am using "messi-db-app:" Key so that, I can show ANY CUSTOM KEY-VALUE pair can be Given
    messi-db-app: postgres-e-cloud-deployment

spec:
  replicas: 1
  selector:
    matchLabels:
      # "messi-db-app: postgres-e-cloud-pod" üëà this KEY-VALUE Pair Must match the Below Pod's KEY-VALUE Pair
      messi-db-app: postgres-e-cloud-pod

  # This section defines the Pod template (metadata + spec)
  template:
    metadata:
      labels:
        messi-db-app: postgres-e-cloud-pod # üëà this Must Match with "matchLabels" KEY-VALUE pair
    spec:
      containers:
        - name: my-postgres-pod
          image: postgres:17             # Use local image if available
          imagePullPolicy: IfNotPresent  # Use local image if exists, otherwise pull
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "e_cloud_learniverse_db"
          ports:
            - containerPort: 5432
          
          # üëá Native Kubernetes readiness probe
          # FastAPI initContainer will keep waiting until this becomes ‚ÄúReady‚Äù.
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5   # Wait 5s before first check
            periodSeconds: 5         # Check every 5s
            timeoutSeconds: 2        # Each check must complete in 2s
            failureThreshold: 3      # Mark pod Unready after 3 fails
            successThreshold: 1      # Mark Ready after 1 success

          # (Optional but recommended)
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 30  # Wait longer before first check
            periodSeconds: 10